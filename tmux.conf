# Turn mouse on, turns out I always want mouse enabled
set-option -g mouse on

# Enable true colour support for terminals that support it:
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Get windows to always renumber
set-option -g renumber-windows on

set-window-option -g mode-keys vi

# Set the shell window title to the tmux session:
set-option -g set-titles on
# Set the window title to a format Daly likes:
set-option -g set-titles-string '#H:#S #W' # Current host, session name, window name
# Ensure the shell doesn't rename windows automatically
# once they've been given a name
set-option -g allow-rename off

set -g base-index 1
set -g pane-base-index 1

# Set command key
set -g prefix C-f
unbind-key C-b
bind-key C-f send-prefix

# Clear scrollback
bind -n M-k send-keys -R \; clear-history

# Copy and paste from putty
# http://stackoverflow.com/questions/17255031/how-to-copy-from-tmux-running-in-putty-to-windows-clipbard
#setw -g mode-mouse on


# Copy and paste wihtout holding shift
# http://stackoverflow.com/questions/17445100/getting-back-old-copy-paste-behaviour-in-tmux-with-mouse
# In tmux 2.1+, there is no mode-mouse, just mouse http://unix.stackexchange.com/a/44638/100689
if-shell "[[ $(tmux -V) == *2.1 ]]" "bind m run \"if [[ \\\"\\\" != \\\"$(tmux show-option -w | grep 'mouse.*on')\\\" ]]; then toggle=off; else toggle=on; fi; tmux display-message \\\"mouse tmux: \$toggle\\\"; tmux set-option -w mouse \$toggle &> /dev/null;\""


# Removes ESC delay
set -sg escape-time 0

#
# TPM, Tmux Plugin Manager

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/copy-cat'

set -g @plugin 'tmux-plugins/tmux-yank'
# Options for yank_selection: primary, secondary, clipboard
# Primary is suppose to copy text into the mouse clipboard
set -g @yank_selection 'primary'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sessionlist'

set -g @plugin 'arcticicestudio/nord-tmux'

set -g @plugin 'Morantron/tmux-fingers'
set -g @fingers-key /

# vim-tmux-focus-events
set -g focus-events on

# New window with default path set to last path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

#
# vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# /vim-tmux-navigator
#

# Resurect
set -g @plugin 'tmux-plugins/tmux-resurrect'

# tmux-resurect, restore vim-sessions
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# Enable saving pane contents in tmux-resurrect:
set -g @resurrect-capture-pane-contents 'on'

# Automatic restore of tmux environment when tmux is started:
set -g @continuum-restore 'on'

# Colour of status bar.  Instead of 'blue', I could use any color<#>.  Do
# $ for i in {0..255} ; do printf "\x1b[38;5;${i}mcolour${i}\n"; done
# to see all the colours
# set-window-option window-status-bg "#cccccc"

# Increase buffer size
# # Seems to cause trouble
# set-option history-limit 5000

# Fix the issue where once I attach to a session via ssh, later from the
# console I can't launch X11 apps.  This also seems to degrade copy/paste
# https://unix.stackexchange.com/a/475884/100689
set-option -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.

if "test ! -d ~/.tmux/plugins/tpm" \
	"run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

run-shell '~/.tmux/plugins/tpm/tpm'

# vim: ts=3 sw=3 noet ff=unix :
