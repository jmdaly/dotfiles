# This offers problems on AIX
set -g default-terminal "screen-256color"

# Get windows to always renumber
set-option -g renumber-windows on

set-window-option -g mode-keys vi

# Set the shell window title to the tmux session:
set-option -g set-titles on
# Set the window title to a format Daly likes:
set-option -g set-titles-string '#H:#S #W' # Current host, session name, window name
# Ensure the shell doesn't rename windows automatically
# once they've been given a name
set-option -g allow-rename off

# Enable true colour support for terminals that support it:
set-option -ga terminal-overrides ",st-256color:Tc"

set -g base-index 1
set -g pane-base-index 1

# Set command key
set -g prefix C-f
unbind-key C-b
bind-key C-f send-prefix

# Colour of status bar.  Instead of 'blue', I could use any color<#>.  Do
# $ for i in {0..255} ; do printf "\x1b[38;5;${i}mcolour${i}\n"; done
# to see all the colours
set -g status-bg blue

# Clear scrollback
bind -n M-k clear-history

# Copy and paste from putty
# http://stackoverflow.com/questions/17255031/how-to-copy-from-tmux-running-in-putty-to-windows-clipbard
#setw -g mode-mouse on


# Copy and paste wihtout holding shift
# http://stackoverflow.com/questions/17445100/getting-back-old-copy-paste-behaviour-in-tmux-with-mouse
# In tmux 2.1+, there is no mode-mouse, just mouse http://unix.stackexchange.com/a/44638/100689
if-shell "[[ $(tmux -V) == *2.1 ]]" "bind m run \"if [[ \\\"\\\" != \\\"$(tmux show-option -w | grep 'mouse.*on')\\\" ]]; then toggle=off; else toggle=on; fi; tmux display-message \\\"mouse tmux: \$toggle\\\"; tmux set-option -w mouse \$toggle &> /dev/null;\""

if-shell "[[ $(tmux -V) == *1.9 || "$(tmux -V)" == *2.0 ]]" "bind m run \"if [[ \\\"\\\" != \\\"$(tmux show-option -w | grep 'mouse.*on')\\\" ]]; then toggle=off; else toggle=on; fi; tmux display-message \\\"mouse tmux: \$toggle\\\"; tmux set-option -w mouse \$toggle &> /dev/null; for cmd in mouse-select-pane mouse-resize-pane mouse-select-window; do tmux set-option -g \$cmd \$toggle &> /dev/null; done;\""


# Removes ESC delay
set -sg escape-time 0

#
# TPM, Tmux Plugin Manager

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-loggin'
set -g @plugin 'tmux-plugins/vim-tmux'
set -g @plugin 'tmux-plugins/copy-cat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sessionlist'
set -g @plugin 'tmux-plugins/vim-tmux'

# maglev depends on:
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'caiogondim/maglev'

# vim-tmux-focus-events
set -g focus-events on

# Resurect
set -g @plugin 'tmux-plugins/tmux-resurrect'

# New window with default path set to last path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# tmux-resurect, restore vim-sessions
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# Source the file that sets up the tmux theme.
# This was generated using the tmuxline
# vim plugin
if-shell "test -f ~/dotfiles/theme.tmux" "source ~/dotfiles/theme.tmux"

set-option -g status-position bottom

# Increase buffer size
# # Seems to cause trouble
# set-option history-limit 5000

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.

if "test ! -d ~/.tmux/plugins/tpm" \
	"run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

run-shell '~/.tmux/plugins/tpm/tpm'

# vim: ts=3 sw=3 noet ffs=unix :
