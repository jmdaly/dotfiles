#%Module1.0#####################################################################
##
## modules modulefile
##
## modulefiles/modules.  Generated from modules.in by configure.
##
proc ModulesHelp { } {
	global version prefix

  	puts stderr "\t3drf - loads the 3DRi build and run env"
}

module-whatis	"loads the 3DRi environment"

regsub {\..*$} [info hostname] "" hostname

set HOME        $::env(HOME)
set BASE        "${HOME}/workspace/opal2"
set src         "${BASE}/3dri"

set port 8181

# Rebuilt rtags.  Run from $bld or $bld_debug
set-alias BuildRTags "cmake . -DCMAKE_EXPORT_COMPILE_COMMANDS=1; rc -J ."

set     BUILD_TYPE    "Release"
# Use clang.  To use g++, change the path to $(which g++)

# setenv  CXX            "ccache clang++"
# setenv  CCACHE_PREFIX  "distcc"
# setenv  CCACHE_DIR     /media/ccache
setenv  CCACHE_UMASK   002
# setenv  CCACHE_BASEDIR $bld # This should be set by autoenv or something
setenv  CCACHE_LOGFILE /tmp/ccache.log

set-alias buildYcm    "/home/matt/dotfiles/bundles/YCM-Generator/config_gen.py -v -b cmake --qt-version 5 --configure_opts=-DQT_DIR=/opt/Qt5.3.2/5.3/gcc_64 ${src}"

# vim: ts=3 sw=3 sts=0 noet :
